version: '3.8'

services:
  backend:
    build:
      context: ../backend
      dockerfile: ../docker/backend.Dockerfile
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - PORT=3001
      - AZURE_CLIENT_ID=${AZURE_CLIENT_ID}
      - AZURE_CLIENT_SECRET=${AZURE_CLIENT_SECRET}
      - AZURE_TENANT_ID=${AZURE_TENANT_ID}
      - AZURE_AUDIENCE=${AZURE_AUDIENCE}
      - CORS_ORIGINS=http://localhost:3000,https://localhost:3000
    volumes:
      - backend_logs:/app/logs
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3001/health"]
      timeout: 10s
      retries: 3
      start_period: 40s
      interval: 30s
    restart: unless-stopped

  frontend:
    build:
      context: ../frontend
      dockerfile: ../docker/frontend.Dockerfile
    ports:
      - "3000:80"
    environment:
      - VITE_AZURE_CLIENT_ID=${AZURE_CLIENT_ID}
      - VITE_AZURE_TENANT_ID=${AZURE_TENANT_ID}
      - VITE_AZURE_SCOPE=${AZURE_AUDIENCE}
      - VITE_BACKEND_URL=http://localhost:3001
      - VITE_REDIRECT_URI=http://localhost:3000
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/health"]
      timeout: 10s
      retries: 3
      start_period: 30s
      interval: 30s
    restart: unless-stopped

volumes:
  backend_logs: